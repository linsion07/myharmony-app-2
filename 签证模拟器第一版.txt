// entry/src/main/ets/pages/Index.ets
import { picker } from '@kit.CoreFileKit';

interface Option { value: string }   // 通用选项接口

@Entry
@Component
struct VisaApp {
  @State passport: string = ''
  @State imageUri: string = ''
  @State cityIndex: number = 0
  @State typeIndex: number = 0

  private readonly cities: Option[] = [
    { value: '成都' },
    { value: '北京' },
    { value: '广州' },
    { value: '香港' }
  ]
  private readonly types: Option[] = [
    { value: '旅游' },
    { value: '探亲' },
    { value: '商务' }
  ]
  @State result: string = ''

  build() {
    Column({ space: 20 }) {
      Text('签证模拟器').fontSize(24)

      TextInput({ placeholder: '护照号码', text: $$this.passport }).width('90%')

      // 面签地点
      Text('面签地点').fontSize(16)
      Select(this.cities)
        .selected(this.cityIndex)
        .onSelect((i: number) => { this.cityIndex = i })

      // 签证类别
      Text('签证类别').fontSize(16)
      Select(this.types)
        .selected(this.typeIndex)
        .onSelect((i: number) => { this.typeIndex = i })

      Button('上传照片')
        .onClick(async () => {
          const res = await new picker.PhotoViewPicker().select({ maxSelectNumber: 1 })
          if (res && res.photoUris.length) this.imageUri = res.photoUris[0]
        })
      if (this.imageUri) Image(this.imageUri).width(100).height(100).borderRadius(8)

      Button('提交')
        .enabled(this.passport !== '' && this.imageUri !== '')
        .onClick(() => {
          this.result =
            `${this.cities[this.cityIndex].value} - ${this.types[this.typeIndex].value}: ${Math.random() > 0.5 ? '通过' : '拒签'}`
        })

      Text(this.result).fontSize(30).fontColor('#007AFF')
    }
    .padding(30)
    .width('100%')
    .height('100%')
  }
}